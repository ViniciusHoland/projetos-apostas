<!DOCTYPE html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8" />
    <title>Jogos do Dia</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
    />
    <style>
      #bilhete {
        max-height: 400px;
        overflow-y: auto;
      }
      .odd-btn {
        cursor: pointer;
      }
    </style>
  </head>
  <body class="bg-light">
    <div class="container mt-5">
      <a href="/" class="btn btn-primary btn-lg px-4">Cadastrar</a>
      <a href="/apostas" class="btn btn-success btn-lg px-4">
        <i class="fas fa-futbol"></i> Apostas
      </a>
      <a href="/apostas/caixa" class="btn btn-warning text-dark">
        <i class="fas fa-box"></i> Caixa
      </a>

      <h1 class="mb-4">Jogos do Dia</h1>
      <button class="btn btn-info mb-3" onclick="buscarJogosDoDia()">
        <i class="fas fa-sync-alt"></i> Atualizar Jogos do Dia
      </button>

      <div class="row">
        <div class="col-md-8">
          <% if (Object.keys(campeonatos).length === 0) { %>
          <div class="alert alert-info">Nenhum jogo cadastrado para hoje.</div>
          <% } else { %> <% for (let campeonato in campeonatos) { %>
          <h4 class="mt-4"><%= campeonato %></h4>
          <div class="table-responsive">
            <table class="table table-bordered bg-white">
              <thead>
                <tr>
                  <th>Horário</th>
                  <th>Times</th>
                  <th>Casa</th>
                  <th>Empate</th>
                  <th>Fora</th>
                  <th>Personalizadas</th>
                  <th>Ações</th>
                </tr>
              </thead>
              <tbody>
                <% campeonatos[campeonato].forEach(jogo => { const nomeJogo =
                jogo.timeCasa + " x " + jogo.timeFora; const campeonatoLimpo =
                campeonato.replace(/"/g, '&quot;').replace(/'/g, '&#39;'); const
                dataHoraFormatada = jogo.dataHora; const dataHoraISO =
                jogo.dataHora; // você pode renomear se quiser %>
                <tr>
                  <td><%= dataHoraFormatada %></td>
                  <td><%= nomeJogo %></td>
                  <td>
                    <button
                      class="btn btn-outline-primary btn-sm odd-btn"
                      onclick='adicionarBilhete("<%= jogo._id %>", "<%= nomeJogo %>", "Casa", <%= jogo.oddCasa %>, "<%= campeonatoLimpo %>", "<%= dataHoraISO %>")'
                    >
                      <%= jogo.oddCasa.toFixed(2) %>
                    </button>
                  </td>
                  <td>
                    <button
                      class="btn btn-outline-primary btn-sm odd-btn"
                      onclick='adicionarBilhete("<%= jogo._id %>", "<%= nomeJogo %>", "Empate", <%= jogo.oddEmpate %>, "<%= campeonatoLimpo %>", "<%= dataHoraISO %>")'
                    >
                      <%= jogo.oddEmpate.toFixed(2) %>
                    </button>
                  </td>
                  <td>
                    <button
                      class="btn btn-outline-primary btn-sm odd-btn"
                      onclick='adicionarBilhete("<%= jogo._id %>", "<%= nomeJogo %>", "Fora", <%= jogo.oddFora %>, "<%= campeonatoLimpo %>", "<%= dataHoraISO %>")'
                    >
                      <%= jogo.oddFora.toFixed(2) %>
                    </button>
                  </td>
                  <td>
                    <% if (jogo.oddsPersonalizadas.length === 0) { %> - <% }
                    else { %>
                    <ul class="mb-0">
                      <% jogo.oddsPersonalizadas.forEach(o => { const desc =
                      o.descricao || ''; const descLimpa = desc.replace(/"/g,
                      '&quot;').replace(/'/g, '&#39;'); %>

                      <li>
                        <button
                          class="btn btn-outline-primary btn-sm odd-btn"
                          onclick='adicionarBilhete("<%= jogo._id %>", "<%= nomeJogo %>", "<%= descLimpa %>", <%= o.valor %>, "<%= campeonatoLimpo %>", "<%= dataHoraISO %>")'
                        >
                          <strong><%= o.descricao %></strong>: <%=
                          Number(o.valor).toFixed(2) %>
                        </button>
                      </li>
                      <% }) %>
                    </ul>
                    <% } %>
                  </td>
                  <td class="text-center">
                    <a
                      href="/jogos/editar/<%= jogo._id %>"
                      class="btn btn-warning btn-sm me-1"
                      >Editar</a
                    >
                    <button
                      class="btn btn-danger btn-sm"
                      onclick="excluirJogo('<%= jogo._id %>')"
                    >
                      Excluir
                    </button>
                  </td>
                </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
          <% } %> <% } %>
        </div>

        <div class="col-md-4">
          <h4>Bilhete</h4>
          <div id="bilhete" class="bg-white border p-3 rounded mb-3">
            <p class="text-muted">Nenhuma odd selecionada.</p>
          </div>

          <label for="valorTotal" class="form-label"
            >Valor Total da Aposta (R$):</label
          >
          <input
            type="number"
            id="valorTotal"
            min="0"
            step="0.01"
            class="form-control mb-2"
            value=""
            oninput="atualizarRetorno()"
          />

          <p>
            <strong
              >Retorno Estimado: R$
              <span id="retornoEstimado">0.00</span></strong
            >
          </p>

          <label for="nomeCliente" class="form-label">Nome do Cliente:</label>
          <input type="text" id="nomeCliente" class="form-control mb-2" />

          <button
            id="btnFinalizar"
            class="btn btn-success mt-3"
            disabled
            onclick="finalizarAposta()"
          >
            Finalizar Aposta
          </button>
        </div>
      </div>
    </div>

    <script>
      function buscarJogosDoDia() {
        if (confirm("Deseja atualizar os jogos de hoje?")) {
          fetch("api/jogos-hoje")
            .then((response) => {
              if (response.ok) {
                location.reload(); // Recarrega a página para mostrar os jogos
              } else {
                alert("Erro ao buscar jogos.");
              }
            })
            .catch((err) => {
              alert("Erro na comunicação com o servidor.");
              console.error(err);
            });
        }
      }

      const bilhete = [];
      const bilheteDiv = document.getElementById("bilhete");
      const btnFinalizar = document.getElementById("btnFinalizar");
      const valorTotalInput = document.getElementById("valorTotal");
      const retornoEstimadoSpan = document.getElementById("retornoEstimado");

      function adicionarBilhete(
        jogoId,
        jogoNome,
        tipoOdd,
        valorOdd,
        campeonato,
        dataHora
      ) {
        // Verifica se já tem odd para esse jogo (apenas 1 odd por jogo)
        const existeJogo = bilhete.find((item) => item.jogoId === jogoId);
        if (existeJogo) {
          alert("Você já selecionou uma odd para este jogo.");
          return;
        }

        bilhete.push({
          jogoId,
          jogoNome,
          tipoOdd,
          valorOdd,
          campeonato,
          dataHora,
          escolha: tipoOdd,
        });
        renderBilhete();
        atualizarRetorno();
      }

      function removerDoBilhete(index) {
        bilhete.splice(index, 1);
        renderBilhete();
        atualizarRetorno();
      }

      function renderBilhete() {
        if (bilhete.length === 0) {
          bilheteDiv.innerHTML =
            '<p class="text-muted">Nenhuma odd selecionada.</p>';
          btnFinalizar.disabled = true;
          valorTotalInput.value = 0;
          retornoEstimadoSpan.textContent = "0.00";
          return;
        }

        btnFinalizar.disabled = false;

        bilheteDiv.innerHTML = "";
        bilhete.forEach((item, idx) => {
          const div = document.createElement("div");
          div.classList.add("mb-3", "border-bottom", "pb-2");
          div.innerHTML = `
          <strong>${item.jogoNome}</strong><br/>
          <small>Tipo: ${item.tipoOdd}</small><br/>
          <small>Odd: ${item.valorOdd}</small>
          <button class="btn btn-sm btn-danger float-end" onclick="removerDoBilhete(${idx})">X</button>
        `;
          bilheteDiv.appendChild(div);
        });
      }

      function atualizarRetorno() {
        const valorTotal = parseFloat(valorTotalInput.value);
        if (isNaN(valorTotal) || valorTotal <= 0) {
          retornoEstimadoSpan.textContent = "0.00";
          btnFinalizar.disabled = true;
          return;
        }
        btnFinalizar.disabled = bilhete.length === 0;

        // Multiplicar as odds
        const produtoOdds = bilhete.reduce(
          (acc, item) => acc * item.valorOdd,
          1
        );

        let retorno = produtoOdds * valorTotal;
        if (retorno > 1500) {
          retorno = 1500;
        }
        retornoEstimadoSpan.textContent = retorno.toFixed(2);
      }

      function finalizarAposta() {
        const valorTotal = parseFloat(valorTotalInput.value);
        const nomeCliente = document.getElementById("nomeCliente").value.trim();

        if (!nomeCliente) {
          alert("Informe o nome do cliente.");
          return;
        }

        if (isNaN(valorTotal) || valorTotal <= 0) {
          alert("Informe um valor válido para apostar.");
          return;
        }
        if (bilhete.length === 0) {
          alert("Selecione pelo menos uma odd para apostar.");
          return;
        }

        const cotacaoTotal = bilhete.reduce(
          (acc, item) => acc * item.valorOdd,
          1
        );
        let possivelRetorno = cotacaoTotal * valorTotal;

        if (possivelRetorno > 1500) {
          possivelRetorno = 1500;
        }

        const aposta = {
          nomeCliente,
          jogos: bilhete.map((jogo) => ({
            ...jogo,
            data: jogo.dataHora, // ou a data real do jogo, se tiver
            status: "", // pode deixar vazio ou "Pendente"
          })),
          cotacaoTotal,
          valorApostado: valorTotal,
          possivelRetorno,
          data: new Date().toISOString(),
        };

        // Exemplo de envio para backend usando fetch (descomente e ajuste a rota)

        fetch("/apostas/apostar", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(aposta),
        })
          .then(async (res) => {
            if (res.ok) {
              const data = await res.json();
              alert("Aposta realizada com sucesso!");
              const link = `${window.location.origin}/apostas/bilhete/${data.id}`;
              console.log("Link do bilhete:", link);

              // Pode mostrar na tela ou copiar pro clipboard
              const bilheteLinkDiv = document.createElement("div");
              bilheteLinkDiv.classList.add("alert", "alert-success", "mt-3");
              bilheteLinkDiv.innerHTML = `
      Bilhete gerado com sucesso! <br>
      <a href="${link}" target="_blank">${link}</a>
    `;
              document.querySelector(".container").appendChild(bilheteLinkDiv);

              // Limpa bilhete e inputs
              bilhete.length = 0;
              renderBilhete();
              valorTotalInput.value = 0;
              atualizarRetorno();
            } else {
              alert("Erro ao salvar a aposta.");
            }
          })
          .catch(() => alert("Erro na comunicação com o servidor."));

        bilhete.length = 0;
        renderBilhete();
        valorTotalInput.value = 0;
        atualizarRetorno();
      }

      function gerarBilheteVisual(aposta) {
        const bilheteHtml = `
    <div class="border p-3 bg-light mt-3 shadow" id="bilhete-finalizado" style="max-width: 400px; margin: auto;">
      <p><strong>DATA:</strong> ${new Date(aposta.data).toLocaleString()}</p>
      <p><strong>COLABORADOR:</strong> Vinicius00</p>
      <p><strong>CLIENTE:</strong> ${aposta.nomeCliente}</p>
      <hr/>
      <div style="display: flex; justify-content: space-between;">
        <strong>APOSTA</strong>
        <strong>COTAÇÃO</strong>
      </div>
      <hr/>
      ${aposta.jogos
        .map(
          (jogo) => `
        <div>
          <strong>Futebol - ${jogo.dataHora || "Data/Hora"}</strong><br/>
          ${jogo.campeonato || "Campeonato"}<br/>
          ${jogo.jogoNome}<br/>
          
          Odd: <strong>${jogo.escolha || "nenhum"} </strong><br/>
          <div style="display: flex; justify-content: space-between;">
            <span></span>
            <span>${jogo.valorOdd.toFixed(2)}</span>
          </div>
          <p>Status: ${jogo.status || "Aguardando"}</p>
          <hr/>
        </div>
      `
        )
        .join("")}
      <p><strong>Quantidade de Jogos:</strong> ${aposta.jogos.length}</p>
      <p><strong>Cotação:</strong> ${aposta.cotacaoFinal?.toFixed(2)}</p>
      <p><strong>Total Apostado:</strong> R$ ${aposta.valorApostado.toFixed(
        2
      )}</p>
      <p><strong>Possível Retorno:</strong> R$ ${aposta.possivelRetorno.toFixed(
        2
      )}</p>

    </div>
  `;

        const bilheteExistente = document.getElementById("bilhete-finalizado");
        if (bilheteExistente) bilheteExistente.remove();

        const container = document.querySelector(".container");
        container.insertAdjacentHTML("beforeend", bilheteHtml);
      }
      function excluirJogo(id) {
        if (confirm("Tem certeza que deseja excluir este jogo?")) {
          fetch("/jogos/" + id, {
            method: "DELETE",
          })
            .then((res) => {
              if (res.ok) {
                alert("Jogo excluído com sucesso!");
                location.reload();
              } else {
                alert("Erro ao excluir o jogo.");
              }
            })
            .catch(() => alert("Erro de comunicação com o servidor."));
        }
      }
    </script>
  </body>
</html>
